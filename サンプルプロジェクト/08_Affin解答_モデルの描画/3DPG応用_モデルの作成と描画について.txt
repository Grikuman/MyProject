-----------------------------------------------------------
★モデルの表示について
-----------------------------------------------------------
■DirectXTKで簡単に使用できるデータ
・「FBX」を変換した「CMO」←教えた方法
・「sdkmesh」←田中先生のサンプル


-----------------------------------------------------------
■「FBX」を作成できるツール
・Maya
・Blender
など


-----------------------------------------------------------
■「FBX」作成時に注意すること
・パーツ名、マテリアル名、テクスチャ名などはすべて「半角英数」とする
・マテリアル名など「ゲーム内」で同じ名前を使用しない
・テクスチャは「FBX」に含めて出力するとよい
・マイクロソフト製のツールでは今後「FBX」のサポートをしない方針を打ち出している


-----------------------------------------------------------
■「FBX」→「CMO」変換と「CmoPathCut」について
参考：「3DPG応用_03_FBX_CMO変換.pdf」
・「FBX_to_CMO_2024」プロジェクトで「CMO」ファイルに変換する
・「CmoPathCut」で長いファイル名を短くする


-----------------------------------------------------------
■モデルのポリゴンをカリングしないで描画する方法
・DirectX::Model::Draw関数でラムダ式を使用し「カリングしない」設定にする
・DoGAで作成したモデルの表示などが該当する

// 普通の描画
m_model->Draw(context, *states, world, view, projection);

// カスタム描画：ポリゴンの両面を描画する
m_model->Draw(context, *states, world, view, projection, false, [&]()
	{
		context->RSSetState(states->CullNone());
	}
);


-----------------------------------------------------------
■「DoGA」から「CMO」に変換するまでの手順
参考：「DoGA_to_Blender.txt」
１．DoGAでモデルを作る
２．DoGAでモデルをエクスポートする：「VRML形式」
３．Blenderで「２」のファイルをインポートする：「X3D形式」
４．モデルの面の向き（ポリゴンの表裏）を修正する
５．必要に応じてモデルに色を付けたり、テクスチャーを貼ったりする
６．「FBX形式」で出力する：「Y up」「-Z forward」「倍率」を調整する
７．DirectXTKのプロジェクトを使用し「FBX」→「CMO」に変換する


